######################################################################
# Automatically generated by qmake (2.01a) Wed Aug 24 16:37:14 2022
######################################################################

INCLUDEPATH+=../CXX_TOOLS_LIB/ ../CBM_STATE_LIB /user/local/cuda/include /usr/local/cuda/include /opt/cuda/include
LIBS+=-L../libs -L/user/local/cuda/lib64 -L/usr/local/cuda/lib64 -L/usr/lib64 -L/opt/cuda/lib64 -lcbm_state -lcxx_tools -lcudart
QMAKE_CXXFLAGS+=-std=c++11
CONFIG=release
DESTDIR=../libs
OBJECTS_DIR=intout
CUDA_SOURCES=./src/cuda/kernels.cu
TEMPLATE = lib
TARGET = cbm_core
DEPENDPATH += . \
              CBMCoreInclude/cuda \
              CBMCoreInclude/innetmodules \
              CBMCoreInclude/interface \
              CBMCoreInclude/mzonemodules \
              src/innetmodules \
              src/interface \
              src/mzonemodules
INCLUDEPATH += . \
               CBMCoreInclude/innetmodules \
               CBMCoreInclude/cuda \
               CBMCoreInclude/interface \
               CBMCoreInclude/mzonemodules

# Input
HEADERS += CBMCoreInclude/cuda/kernels.h \
           CBMCoreInclude/innetmodules/innet.h \
           CBMCoreInclude/innetmodules/innetallgrmfgo.h \
           CBMCoreInclude/interface/cbmsimcore.h \
           CBMCoreInclude/interface/cbmsimx2grgodecouple.h \
           CBMCoreInclude/interface/innetinterface.h \
           CBMCoreInclude/interface/mzoneinterface.h \
           CBMCoreInclude/mzonemodules/mzone.h
SOURCES += src/innetmodules/innet.cpp \
           src/innetmodules/innetallgrmfgo.cpp \
           src/interface/cbmsimcore.cpp \
           src/interface/cbmsimx2grgodecouple.cpp \
           src/interface/innetinterface.cpp \
           src/interface/mzoneinterface.cpp \
           src/mzonemodules/mzone.cpp
NVCCFLAGS = -O3 -arch=compute_61 -Xcompiler -fPIC
CUDA_INC = $$join(INCLUDEPATH,' -I','-I',' ')
cuda.input = CUDA_SOURCES
cuda.output = ${OBJECTS_DIR}${QMAKE_FILE_BASE}_cuda.o
cuda.commands = nvcc $$NVCCFLAGS $$CUDA_INC -c ${QMAKE_FILE_NAME} -o ${QMAKE_FILE_OUT}
cuda.dependency_type = TYPE_C
cuda.depend_command = nvcc -g -G -M $$NVCCFLAGS $$CUDA_INC ${QMAKE_FILE_NAME}
QMAKE_EXTRA_COMPILERS += cuda
